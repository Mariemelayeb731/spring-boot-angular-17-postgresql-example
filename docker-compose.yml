version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: bezkoder
      POSTGRES_PASSWORD: bez123
      POSTGRES_DB: bezkoder_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 15
    networks:
      app_net:

  spring-boot:
    build:
      context: ./spring-boot-server
      dockerfile: Dockerfile
    command: ["./wait-for-postgres.sh", "postgres:5432", "--", "java", "-jar", "your-app.jar"] # Adapter au nom réel de votre JAR
    ports:
      - "8084:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bezkoder_db
      SPRING_DATASOURCE_USERNAME: bezkoder
      SPRING_DATASOURCE_PASSWORD: bez123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update # Correction ici
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: '*'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      start_period: 60s # Augmenté à 60s
      retries: 5

  # ... (autres services restent inchangés)

volumes:
  postgres_data:
  pgadmin_data:
  grafana-storage:

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
