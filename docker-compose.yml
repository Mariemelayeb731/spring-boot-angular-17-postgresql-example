version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: bezkoder
      POSTGRES_PASSWORD: bez123
      POSTGRES_DB: ezkoder_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Port modifié pour éviter les conflits
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bezkoder -d ezkoder_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app_net

  spring-boot:
    build:
      context: ./spring-boot-server
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ezkoder_db
      SPRING_DATASOURCE_USERNAME: bezkoder
      SPRING_DATASOURCE_PASSWORD: bez123
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  angular:
    build:
      context: ./angular-17-client
      dockerfile: Dockerfile
    ports:
      - "4201:80"
    depends_on:
      spring-boot:
        condition: service_healthy
    networks:
      - app_net

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./angular-17-client/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      angular:
        condition: service_started
      spring-boot:
        condition: service_healthy
    networks:
      - app_net

volumes:
  postgres_data:

networks:
  app_net:
    driver: bridge